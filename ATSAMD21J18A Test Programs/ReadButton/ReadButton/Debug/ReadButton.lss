
ReadButton.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000430  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  00000430  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  20000434  00000864  00020434  2**2
                  ALLOC
  3 .stack        00002004  20000474  000008a4  00020434  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045c  2**0
                  CONTENTS, READONLY
  6 .debug_info   00003c00  00000000  00000000  000204b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000033a  00000000  00000000  000240b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000060  00000000  00000000  000243ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000070  00000000  00000000  0002444f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  000244bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  000118fe  00000000  00000000  000244ff  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000148a  00000000  00000000  00035dfd  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00070fd5  00000000  00000000  00037287  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  0000025c  00000000  00000000  000a825c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
   0:	78 24 00 20 19 01 00 00 15 01 00 00 15 01 00 00     x$. ............
	...
  2c:	15 01 00 00 00 00 00 00 00 00 00 00 15 01 00 00     ................
  3c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  4c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  5c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  6c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  7c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  8c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  9c:	15 01 00 00 15 01 00 00 15 01 00 00 15 01 00 00     ................
  ac:	15 01 00 00 00 00 00 00                             ........

000000b4 <__do_global_dtors_aux>:
  b4:	b510      	push	{r4, lr}
  b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
  b8:	7823      	ldrb	r3, [r4, #0]
  ba:	2b00      	cmp	r3, #0
  bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
  be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
  c0:	2b00      	cmp	r3, #0
  c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
  c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
  c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
  c8:	bf00      	nop
  ca:	2301      	movs	r3, #1
  cc:	7023      	strb	r3, [r4, #0]
  ce:	bd10      	pop	{r4, pc}
  d0:	20000434 	.word	0x20000434
  d4:	00000000 	.word	0x00000000
  d8:	00000430 	.word	0x00000430

000000dc <frame_dummy>:
  dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
  de:	b510      	push	{r4, lr}
  e0:	2b00      	cmp	r3, #0
  e2:	d003      	beq.n	ec <frame_dummy+0x10>
  e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
  e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
  e8:	e000      	b.n	ec <frame_dummy+0x10>
  ea:	bf00      	nop
  ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
  ee:	6803      	ldr	r3, [r0, #0]
  f0:	2b00      	cmp	r3, #0
  f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
  f4:	bd10      	pop	{r4, pc}
  f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
  f8:	2b00      	cmp	r3, #0
  fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
  fc:	4798      	blx	r3
  fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
 100:	00000000 	.word	0x00000000
 104:	20000438 	.word	0x20000438
 108:	00000430 	.word	0x00000430
 10c:	00000430 	.word	0x00000430
 110:	00000000 	.word	0x00000000

00000114 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
 114:	e7fe      	b.n	114 <Dummy_Handler>
	...

00000118 <Reset_Handler>:
{
 118:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
        if (pSrc != pDest) {
 11a:	4a2a      	ldr	r2, [pc, #168]	; (1c4 <Reset_Handler+0xac>)
 11c:	4b2a      	ldr	r3, [pc, #168]	; (1c8 <Reset_Handler+0xb0>)
 11e:	429a      	cmp	r2, r3
 120:	d011      	beq.n	146 <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
 122:	001a      	movs	r2, r3
 124:	4b29      	ldr	r3, [pc, #164]	; (1cc <Reset_Handler+0xb4>)
 126:	429a      	cmp	r2, r3
 128:	d20d      	bcs.n	146 <Reset_Handler+0x2e>
 12a:	4a29      	ldr	r2, [pc, #164]	; (1d0 <Reset_Handler+0xb8>)
 12c:	3303      	adds	r3, #3
 12e:	1a9b      	subs	r3, r3, r2
 130:	089b      	lsrs	r3, r3, #2
 132:	3301      	adds	r3, #1
 134:	009b      	lsls	r3, r3, #2
 136:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
 138:	4823      	ldr	r0, [pc, #140]	; (1c8 <Reset_Handler+0xb0>)
 13a:	4922      	ldr	r1, [pc, #136]	; (1c4 <Reset_Handler+0xac>)
 13c:	588c      	ldr	r4, [r1, r2]
 13e:	5084      	str	r4, [r0, r2]
 140:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
 142:	429a      	cmp	r2, r3
 144:	d1fa      	bne.n	13c <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
 146:	4a23      	ldr	r2, [pc, #140]	; (1d4 <Reset_Handler+0xbc>)
 148:	4b23      	ldr	r3, [pc, #140]	; (1d8 <Reset_Handler+0xc0>)
 14a:	429a      	cmp	r2, r3
 14c:	d20a      	bcs.n	164 <Reset_Handler+0x4c>
 14e:	43d3      	mvns	r3, r2
 150:	4921      	ldr	r1, [pc, #132]	; (1d8 <Reset_Handler+0xc0>)
 152:	185b      	adds	r3, r3, r1
 154:	2103      	movs	r1, #3
 156:	438b      	bics	r3, r1
 158:	3304      	adds	r3, #4
 15a:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
 15c:	2100      	movs	r1, #0
 15e:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
 160:	4293      	cmp	r3, r2
 162:	d1fc      	bne.n	15e <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
 164:	4a1d      	ldr	r2, [pc, #116]	; (1dc <Reset_Handler+0xc4>)
 166:	21ff      	movs	r1, #255	; 0xff
 168:	4b1d      	ldr	r3, [pc, #116]	; (1e0 <Reset_Handler+0xc8>)
 16a:	438b      	bics	r3, r1
 16c:	6093      	str	r3, [r2, #8]
        SBMATRIX->SFR[SBMATRIX_SLAVE_HMCRAMC0].reg = 2;
 16e:	39fd      	subs	r1, #253	; 0xfd
 170:	2390      	movs	r3, #144	; 0x90
 172:	005b      	lsls	r3, r3, #1
 174:	4a1b      	ldr	r2, [pc, #108]	; (1e4 <Reset_Handler+0xcc>)
 176:	50d1      	str	r1, [r2, r3]
        USB->DEVICE.QOSCTRL.bit.CQOS = 2;
 178:	4a1b      	ldr	r2, [pc, #108]	; (1e8 <Reset_Handler+0xd0>)
 17a:	78d3      	ldrb	r3, [r2, #3]
 17c:	2503      	movs	r5, #3
 17e:	43ab      	bics	r3, r5
 180:	2402      	movs	r4, #2
 182:	4323      	orrs	r3, r4
 184:	70d3      	strb	r3, [r2, #3]
        USB->DEVICE.QOSCTRL.bit.DQOS = 2;
 186:	78d3      	ldrb	r3, [r2, #3]
 188:	270c      	movs	r7, #12
 18a:	43bb      	bics	r3, r7
 18c:	2608      	movs	r6, #8
 18e:	4333      	orrs	r3, r6
 190:	70d3      	strb	r3, [r2, #3]
        DMAC->QOSCTRL.bit.DQOS = 2;
 192:	4b16      	ldr	r3, [pc, #88]	; (1ec <Reset_Handler+0xd4>)
 194:	7b98      	ldrb	r0, [r3, #14]
 196:	2230      	movs	r2, #48	; 0x30
 198:	4390      	bics	r0, r2
 19a:	2220      	movs	r2, #32
 19c:	4310      	orrs	r0, r2
 19e:	7398      	strb	r0, [r3, #14]
        DMAC->QOSCTRL.bit.FQOS = 2;
 1a0:	7b99      	ldrb	r1, [r3, #14]
 1a2:	43b9      	bics	r1, r7
 1a4:	4331      	orrs	r1, r6
 1a6:	7399      	strb	r1, [r3, #14]
        DMAC->QOSCTRL.bit.WRBQOS = 2;
 1a8:	7b9a      	ldrb	r2, [r3, #14]
 1aa:	43aa      	bics	r2, r5
 1ac:	4322      	orrs	r2, r4
 1ae:	739a      	strb	r2, [r3, #14]
        NVMCTRL->CTRLB.bit.MANW = 1;
 1b0:	4a0f      	ldr	r2, [pc, #60]	; (1f0 <Reset_Handler+0xd8>)
 1b2:	6853      	ldr	r3, [r2, #4]
 1b4:	2180      	movs	r1, #128	; 0x80
 1b6:	430b      	orrs	r3, r1
 1b8:	6053      	str	r3, [r2, #4]
        __libc_init_array();
 1ba:	4b0e      	ldr	r3, [pc, #56]	; (1f4 <Reset_Handler+0xdc>)
 1bc:	4798      	blx	r3
        main();
 1be:	4b0e      	ldr	r3, [pc, #56]	; (1f8 <Reset_Handler+0xe0>)
 1c0:	4798      	blx	r3
 1c2:	e7fe      	b.n	1c2 <Reset_Handler+0xaa>
 1c4:	00000430 	.word	0x00000430
 1c8:	20000000 	.word	0x20000000
 1cc:	20000434 	.word	0x20000434
 1d0:	20000004 	.word	0x20000004
 1d4:	20000434 	.word	0x20000434
 1d8:	20000474 	.word	0x20000474
 1dc:	e000ed00 	.word	0xe000ed00
 1e0:	00000000 	.word	0x00000000
 1e4:	41007000 	.word	0x41007000
 1e8:	41005000 	.word	0x41005000
 1ec:	41004800 	.word	0x41004800
 1f0:	41004000 	.word	0x41004000
 1f4:	00000269 	.word	0x00000269
 1f8:	0000020d 	.word	0x0000020d

000001fc <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
        // Keep the default device state after reset
        SystemCoreClock = __SYSTEM_CLOCK;
 1fc:	4a01      	ldr	r2, [pc, #4]	; (204 <SystemInit+0x8>)
 1fe:	4b02      	ldr	r3, [pc, #8]	; (208 <SystemInit+0xc>)
 200:	601a      	str	r2, [r3, #0]
        return;
}
 202:	4770      	bx	lr
 204:	000f4240 	.word	0x000f4240
 208:	20000000 	.word	0x20000000

0000020c <main>:
 */ 

#include "sam.h"

int main(void)
{
 20c:	b570      	push	{r4, r5, r6, lr}
  /* Initialize the SAM system */
  SystemInit();
 20e:	4b0e      	ldr	r3, [pc, #56]	; (248 <main+0x3c>)
 210:	4798      	blx	r3

  //set up the LED
  REG_PORT_DIRSET1 = PORT_PB30;  //set PB30 to output
 212:	2380      	movs	r3, #128	; 0x80
 214:	05db      	lsls	r3, r3, #23
 216:	4a0d      	ldr	r2, [pc, #52]	; (24c <main+0x40>)
 218:	6013      	str	r3, [r2, #0]
  REG_PORT_OUTSET1 = PORT_PB30;  //pull PB30 to VCC -> LED off
 21a:	4a0d      	ldr	r2, [pc, #52]	; (250 <main+0x44>)
 21c:	6013      	str	r3, [r2, #0]
  
  //set up the button
  REG_PORT_WRCONFIG0 = PORT_WRCONFIG_WRPINCFG | PORT_WRCONFIG_PULLEN | 
 21e:	4a0d      	ldr	r2, [pc, #52]	; (254 <main+0x48>)
 220:	4b0d      	ldr	r3, [pc, #52]	; (258 <main+0x4c>)
 222:	601a      	str	r2, [r3, #0]
                       PORT_WRCONFIG_INEN | PORT_WRCONFIG_PINMASK(PORT_PA15); //write configuration reg for port PA15 (enable input and pull resistor )
  REG_PORT_OUTSET0 = PORT_PA15;  //set pull resistor to pull-up  
 224:	2280      	movs	r2, #128	; 0x80
 226:	0212      	lsls	r2, r2, #8
 228:	4b0c      	ldr	r3, [pc, #48]	; (25c <main+0x50>)
 22a:	601a      	str	r2, [r3, #0]
  
  while (1) 
  {
    if (!(REG_PORT_IN0 & PORT_PA15))
 22c:	480c      	ldr	r0, [pc, #48]	; (260 <main+0x54>)
 22e:	0011      	movs	r1, r2
      REG_PORT_OUTCLR1 = PORT_PB30;  //turn on LED
    }
    else
    {
      //button released
      REG_PORT_OUTSET1 = PORT_PB30;  //turn off LED
 230:	4d07      	ldr	r5, [pc, #28]	; (250 <main+0x44>)
 232:	2280      	movs	r2, #128	; 0x80
 234:	05d2      	lsls	r2, r2, #23
      REG_PORT_OUTCLR1 = PORT_PB30;  //turn on LED
 236:	4c0b      	ldr	r4, [pc, #44]	; (264 <main+0x58>)
 238:	e000      	b.n	23c <main+0x30>
      REG_PORT_OUTSET1 = PORT_PB30;  //turn off LED
 23a:	602a      	str	r2, [r5, #0]
    if (!(REG_PORT_IN0 & PORT_PA15))
 23c:	6803      	ldr	r3, [r0, #0]
 23e:	420b      	tst	r3, r1
 240:	d1fb      	bne.n	23a <main+0x2e>
      REG_PORT_OUTCLR1 = PORT_PB30;  //turn on LED
 242:	6022      	str	r2, [r4, #0]
 244:	e7fa      	b.n	23c <main+0x30>
 246:	46c0      	nop			; (mov r8, r8)
 248:	000001fd 	.word	0x000001fd
 24c:	41004488 	.word	0x41004488
 250:	41004498 	.word	0x41004498
 254:	40068000 	.word	0x40068000
 258:	41004428 	.word	0x41004428
 25c:	41004418 	.word	0x41004418
 260:	41004420 	.word	0x41004420
 264:	41004494 	.word	0x41004494

00000268 <__libc_init_array>:
 268:	b570      	push	{r4, r5, r6, lr}
 26a:	4e0d      	ldr	r6, [pc, #52]	; (2a0 <__libc_init_array+0x38>)
 26c:	4d0d      	ldr	r5, [pc, #52]	; (2a4 <__libc_init_array+0x3c>)
 26e:	2400      	movs	r4, #0
 270:	1bad      	subs	r5, r5, r6
 272:	10ad      	asrs	r5, r5, #2
 274:	d005      	beq.n	282 <__libc_init_array+0x1a>
 276:	00a3      	lsls	r3, r4, #2
 278:	58f3      	ldr	r3, [r6, r3]
 27a:	3401      	adds	r4, #1
 27c:	4798      	blx	r3
 27e:	42a5      	cmp	r5, r4
 280:	d1f9      	bne.n	276 <__libc_init_array+0xe>
 282:	f000 f8c3 	bl	40c <_init>
 286:	4e08      	ldr	r6, [pc, #32]	; (2a8 <__libc_init_array+0x40>)
 288:	4d08      	ldr	r5, [pc, #32]	; (2ac <__libc_init_array+0x44>)
 28a:	2400      	movs	r4, #0
 28c:	1bad      	subs	r5, r5, r6
 28e:	10ad      	asrs	r5, r5, #2
 290:	d005      	beq.n	29e <__libc_init_array+0x36>
 292:	00a3      	lsls	r3, r4, #2
 294:	58f3      	ldr	r3, [r6, r3]
 296:	3401      	adds	r4, #1
 298:	4798      	blx	r3
 29a:	42a5      	cmp	r5, r4
 29c:	d1f9      	bne.n	292 <__libc_init_array+0x2a>
 29e:	bd70      	pop	{r4, r5, r6, pc}
 2a0:	00000418 	.word	0x00000418
 2a4:	00000418 	.word	0x00000418
 2a8:	00000418 	.word	0x00000418
 2ac:	00000420 	.word	0x00000420

000002b0 <register_fini>:
 2b0:	4b03      	ldr	r3, [pc, #12]	; (2c0 <register_fini+0x10>)
 2b2:	b510      	push	{r4, lr}
 2b4:	2b00      	cmp	r3, #0
 2b6:	d002      	beq.n	2be <register_fini+0xe>
 2b8:	4802      	ldr	r0, [pc, #8]	; (2c4 <register_fini+0x14>)
 2ba:	f000 f805 	bl	2c8 <atexit>
 2be:	bd10      	pop	{r4, pc}
 2c0:	00000000 	.word	0x00000000
 2c4:	000002d9 	.word	0x000002d9

000002c8 <atexit>:
 2c8:	b510      	push	{r4, lr}
 2ca:	0001      	movs	r1, r0
 2cc:	2300      	movs	r3, #0
 2ce:	2200      	movs	r2, #0
 2d0:	2000      	movs	r0, #0
 2d2:	f000 f81f 	bl	314 <__register_exitproc>
 2d6:	bd10      	pop	{r4, pc}

000002d8 <__libc_fini_array>:
 2d8:	b570      	push	{r4, r5, r6, lr}
 2da:	4b09      	ldr	r3, [pc, #36]	; (300 <__libc_fini_array+0x28>)
 2dc:	4c09      	ldr	r4, [pc, #36]	; (304 <__libc_fini_array+0x2c>)
 2de:	1ae4      	subs	r4, r4, r3
 2e0:	10a4      	asrs	r4, r4, #2
 2e2:	d009      	beq.n	2f8 <__libc_fini_array+0x20>
 2e4:	4a08      	ldr	r2, [pc, #32]	; (308 <__libc_fini_array+0x30>)
 2e6:	18a5      	adds	r5, r4, r2
 2e8:	00ad      	lsls	r5, r5, #2
 2ea:	18ed      	adds	r5, r5, r3
 2ec:	682b      	ldr	r3, [r5, #0]
 2ee:	3c01      	subs	r4, #1
 2f0:	4798      	blx	r3
 2f2:	3d04      	subs	r5, #4
 2f4:	2c00      	cmp	r4, #0
 2f6:	d1f9      	bne.n	2ec <__libc_fini_array+0x14>
 2f8:	f000 f892 	bl	420 <_fini>
 2fc:	bd70      	pop	{r4, r5, r6, pc}
 2fe:	46c0      	nop			; (mov r8, r8)
 300:	0000042c 	.word	0x0000042c
 304:	00000430 	.word	0x00000430
 308:	3fffffff 	.word	0x3fffffff

0000030c <__retarget_lock_acquire_recursive>:
 30c:	4770      	bx	lr
 30e:	46c0      	nop			; (mov r8, r8)

00000310 <__retarget_lock_release_recursive>:
 310:	4770      	bx	lr
 312:	46c0      	nop			; (mov r8, r8)

00000314 <__register_exitproc>:
 314:	b5f0      	push	{r4, r5, r6, r7, lr}
 316:	464e      	mov	r6, r9
 318:	4645      	mov	r5, r8
 31a:	46de      	mov	lr, fp
 31c:	4657      	mov	r7, sl
 31e:	b5e0      	push	{r5, r6, r7, lr}
 320:	4d36      	ldr	r5, [pc, #216]	; (3fc <__register_exitproc+0xe8>)
 322:	b083      	sub	sp, #12
 324:	0006      	movs	r6, r0
 326:	6828      	ldr	r0, [r5, #0]
 328:	4698      	mov	r8, r3
 32a:	000f      	movs	r7, r1
 32c:	4691      	mov	r9, r2
 32e:	f7ff ffed 	bl	30c <__retarget_lock_acquire_recursive>
 332:	4b33      	ldr	r3, [pc, #204]	; (400 <__register_exitproc+0xec>)
 334:	681c      	ldr	r4, [r3, #0]
 336:	23a4      	movs	r3, #164	; 0xa4
 338:	005b      	lsls	r3, r3, #1
 33a:	58e0      	ldr	r0, [r4, r3]
 33c:	2800      	cmp	r0, #0
 33e:	d052      	beq.n	3e6 <__register_exitproc+0xd2>
 340:	6843      	ldr	r3, [r0, #4]
 342:	2b1f      	cmp	r3, #31
 344:	dc13      	bgt.n	36e <__register_exitproc+0x5a>
 346:	1c5a      	adds	r2, r3, #1
 348:	9201      	str	r2, [sp, #4]
 34a:	2e00      	cmp	r6, #0
 34c:	d128      	bne.n	3a0 <__register_exitproc+0x8c>
 34e:	9a01      	ldr	r2, [sp, #4]
 350:	3302      	adds	r3, #2
 352:	009b      	lsls	r3, r3, #2
 354:	6042      	str	r2, [r0, #4]
 356:	501f      	str	r7, [r3, r0]
 358:	6828      	ldr	r0, [r5, #0]
 35a:	f7ff ffd9 	bl	310 <__retarget_lock_release_recursive>
 35e:	2000      	movs	r0, #0
 360:	b003      	add	sp, #12
 362:	bc3c      	pop	{r2, r3, r4, r5}
 364:	4690      	mov	r8, r2
 366:	4699      	mov	r9, r3
 368:	46a2      	mov	sl, r4
 36a:	46ab      	mov	fp, r5
 36c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 36e:	4b25      	ldr	r3, [pc, #148]	; (404 <__register_exitproc+0xf0>)
 370:	2b00      	cmp	r3, #0
 372:	d03d      	beq.n	3f0 <__register_exitproc+0xdc>
 374:	20c8      	movs	r0, #200	; 0xc8
 376:	0040      	lsls	r0, r0, #1
 378:	e000      	b.n	37c <__register_exitproc+0x68>
 37a:	bf00      	nop
 37c:	2800      	cmp	r0, #0
 37e:	d037      	beq.n	3f0 <__register_exitproc+0xdc>
 380:	22a4      	movs	r2, #164	; 0xa4
 382:	2300      	movs	r3, #0
 384:	0052      	lsls	r2, r2, #1
 386:	58a1      	ldr	r1, [r4, r2]
 388:	6043      	str	r3, [r0, #4]
 38a:	6001      	str	r1, [r0, #0]
 38c:	50a0      	str	r0, [r4, r2]
 38e:	3240      	adds	r2, #64	; 0x40
 390:	5083      	str	r3, [r0, r2]
 392:	3204      	adds	r2, #4
 394:	5083      	str	r3, [r0, r2]
 396:	3301      	adds	r3, #1
 398:	9301      	str	r3, [sp, #4]
 39a:	2300      	movs	r3, #0
 39c:	2e00      	cmp	r6, #0
 39e:	d0d6      	beq.n	34e <__register_exitproc+0x3a>
 3a0:	009a      	lsls	r2, r3, #2
 3a2:	4692      	mov	sl, r2
 3a4:	4482      	add	sl, r0
 3a6:	464a      	mov	r2, r9
 3a8:	2188      	movs	r1, #136	; 0x88
 3aa:	4654      	mov	r4, sl
 3ac:	5062      	str	r2, [r4, r1]
 3ae:	22c4      	movs	r2, #196	; 0xc4
 3b0:	0052      	lsls	r2, r2, #1
 3b2:	4691      	mov	r9, r2
 3b4:	4481      	add	r9, r0
 3b6:	464a      	mov	r2, r9
 3b8:	3987      	subs	r1, #135	; 0x87
 3ba:	4099      	lsls	r1, r3
 3bc:	6812      	ldr	r2, [r2, #0]
 3be:	468b      	mov	fp, r1
 3c0:	430a      	orrs	r2, r1
 3c2:	4694      	mov	ip, r2
 3c4:	464a      	mov	r2, r9
 3c6:	4661      	mov	r1, ip
 3c8:	6011      	str	r1, [r2, #0]
 3ca:	2284      	movs	r2, #132	; 0x84
 3cc:	4641      	mov	r1, r8
 3ce:	0052      	lsls	r2, r2, #1
 3d0:	50a1      	str	r1, [r4, r2]
 3d2:	2e02      	cmp	r6, #2
 3d4:	d1bb      	bne.n	34e <__register_exitproc+0x3a>
 3d6:	0002      	movs	r2, r0
 3d8:	465c      	mov	r4, fp
 3da:	328d      	adds	r2, #141	; 0x8d
 3dc:	32ff      	adds	r2, #255	; 0xff
 3de:	6811      	ldr	r1, [r2, #0]
 3e0:	430c      	orrs	r4, r1
 3e2:	6014      	str	r4, [r2, #0]
 3e4:	e7b3      	b.n	34e <__register_exitproc+0x3a>
 3e6:	0020      	movs	r0, r4
 3e8:	304d      	adds	r0, #77	; 0x4d
 3ea:	30ff      	adds	r0, #255	; 0xff
 3ec:	50e0      	str	r0, [r4, r3]
 3ee:	e7a7      	b.n	340 <__register_exitproc+0x2c>
 3f0:	6828      	ldr	r0, [r5, #0]
 3f2:	f7ff ff8d 	bl	310 <__retarget_lock_release_recursive>
 3f6:	2001      	movs	r0, #1
 3f8:	4240      	negs	r0, r0
 3fa:	e7b1      	b.n	360 <__register_exitproc+0x4c>
 3fc:	20000430 	.word	0x20000430
 400:	00000408 	.word	0x00000408
 404:	00000000 	.word	0x00000000

00000408 <_global_impure_ptr>:
 408:	20000008                                ... 

0000040c <_init>:
 40c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 40e:	46c0      	nop			; (mov r8, r8)
 410:	bcf8      	pop	{r3, r4, r5, r6, r7}
 412:	bc08      	pop	{r3}
 414:	469e      	mov	lr, r3
 416:	4770      	bx	lr

00000418 <__init_array_start>:
 418:	000002b1 	.word	0x000002b1

0000041c <__frame_dummy_init_array_entry>:
 41c:	000000dd                                ....

00000420 <_fini>:
 420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 422:	46c0      	nop			; (mov r8, r8)
 424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 426:	bc08      	pop	{r3}
 428:	469e      	mov	lr, r3
 42a:	4770      	bx	lr

0000042c <__fini_array_start>:
 42c:	000000b5 	.word	0x000000b5
